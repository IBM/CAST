/*================================================================================

    csmi/include/csm_types/struct_defs/inv/csm_ib_cable_query_input.def

  Â© Copyright IBM Corporation 2015-2017. All Rights Reserved

    This program is licensed under the terms of the Eclipse Public License
    v1.0 as published by the Eclipse Foundation and available at
    http://www.eclipse.org/legal/epl-v10.html

    U.S. Government Users Restricted Rights:  Use, duplication or disclosure
    restricted by GSA ADP Schedule Contract with IBM Corp.

================================================================================*/

/**
 * CSMI_COMMENT
 * @brief An input wrapper for @ref csm_ib_cable_query.
 */

#ifndef CSMI_STRUCT_NAME
    #define CSMI_STRUCT_NAME csm_ib_cable_query_input_t
    
    #undef CSMI_BASIC              
    #undef CSMI_STRING             
    #undef CSMI_STRING_FIXED       
    #undef CSMI_ARRAY              
    #undef CSMI_ARRAY_FIXED        
    #undef CSMI_ARRAY_STR          
    #undef CSMI_ARRAY_STR_FIXED    
    #undef CSMI_STRUCT             
    #undef CSMI_ARRAY_STRUCT       
    #undef CSMI_ARRAY_STRUCT_FIXED 
    #undef CSMI_NONE  
    
    #define CSMI_BASIC               1
    #define CSMI_STRING              0
    #define CSMI_STRING_FIXED        0
    #define CSMI_ARRAY               0
    #define CSMI_ARRAY_FIXED         0
    #define CSMI_ARRAY_STR           1
    #define CSMI_ARRAY_STR_FIXED     0
    #define CSMI_STRUCT              0
    #define CSMI_ARRAY_STRUCT        0
    #define CSMI_ARRAY_STRUCT_FIXED  0
    #define CSMI_NONE                0
#endif 

// CSMI_STRUCT_MEMBER(type, name, serial_type, length_member, init_value, extra ) /**< comment */
CSMI_VERSION_START(CSM_VERSION_0_4_1)

CSMI_STRUCT_MEMBER(int32_t , limit               , BASIC    ,                     , -1  , ) /**< SQL 'LIMIT' numeric value. API will ignore values less than 1.*/
CSMI_STRUCT_MEMBER(int32_t , offset              , BASIC    ,                     , -1  , ) /**< SQL 'OFFSET' numeric value. API will ignore values less than 1.*/
CSMI_STRUCT_MEMBER(uint32_t, serial_numbers_count, BASIC    ,                     ,  0  , ) /**< Number of serial numbers to query on, size of @ref serial_numbers. */
CSMI_STRUCT_MEMBER(char**  , serial_numbers      , ARRAY_STR, serial_numbers_count, NULL, ) /**< Listing of serial numbers to query the database for matches of, size defined by @ref serial_numbers_count. */

CSMI_VERSION_END(3e69eda81e00d592815ea50c6d0889b6)

CSMI_VERSION_START(CSM_DEVELOPMENT)
CSMI_STRUCT_MEMBER(uint32_t, comments_count    , BASIC    ,                   , 0   , ) /**< Number of comment strings to query on, size of @ref comment. */
CSMI_STRUCT_MEMBER(char**  , comments          , ARRAY_STR, comments_count    , NULL, ) /**< Filter results of the database query to only include cables containing comments in this list. This field uses psql search of 'LIKE'. So add '%' to get partial matches. '%value%' */
CSMI_STRUCT_MEMBER(uint32_t, guids_count       , BASIC    ,                   , 0   , ) /**< Number of guid strings to query on, size of @ref guids. */
CSMI_STRUCT_MEMBER(char**  , guids             , ARRAY_STR, guids_count       , NULL, ) /**< Filter results of the database query to only include cables containing guids in this list. API will search both 'guid_s1' and 'guid_s2' fields in 'csm_ib_cable' table. */
CSMI_STRUCT_MEMBER(uint32_t, identifiers_count , BASIC    ,                   , 0   , ) /**< Number of identifier strings to query on, size of @ref identifier. */
CSMI_STRUCT_MEMBER(char**  , identifiers       , ARRAY_STR, identifiers_count , NULL, ) /**< Filter results of the database query to only include cables containing identifiers in this list. This field uses psql search of 'LIKE'. So add '%' to get partial matches. '%value%' */
CSMI_STRUCT_MEMBER(uint32_t, lengths_count     , BASIC    ,                   , 0   , ) /**< Number of length strings to query on, size of @ref length. */
CSMI_STRUCT_MEMBER(char**  , lengths           , ARRAY_STR, lengths_count     , NULL, ) /**< Filter results of the database query to only include cables containing lengths in this list. This field uses psql search of 'LIKE'. So add '%' to get partial matches. '%value%' */
CSMI_STRUCT_MEMBER(uint32_t, names_count       , BASIC    ,                   , 0   , ) /**< Number of name strings to query on, size of @ref name. */
CSMI_STRUCT_MEMBER(char**  , names             , ARRAY_STR, names_count       , NULL, ) /**< Filter results of the database query to only include cables containing names in this list. This field uses psql search of 'LIKE'. So add '%' to get partial matches. '%value%' */
CSMI_STRUCT_MEMBER(uint32_t, part_numbers_count, BASIC    ,                   , 0   , ) /**< Number of part_number strings to query on, size of @ref part_number. */
CSMI_STRUCT_MEMBER(char**  , part_numbers      , ARRAY_STR, part_numbers_count, NULL, ) /**< Filter results of the database query to only include cables containing part_numbers in this list. This field uses psql search of 'LIKE'. So add '%' to get partial matches. '%value%' */
CSMI_STRUCT_MEMBER(uint32_t, ports_count       , BASIC    ,                   , 0   , ) /**< Number of port strings to query on, size of @ref ports. */
CSMI_STRUCT_MEMBER(char**  , ports             , ARRAY_STR, ports_count       , NULL, ) /**< Filter results of the database query to only include cables containing ports in this list. This field uses psql search of 'LIKE'. So add '%' to get partial matches. '%value%' API will search both 'port_s1' and 'port_s2' fields in 'csm_ib_cable' table. */
CSMI_STRUCT_MEMBER(uint32_t, revisions_count   , BASIC    ,                   , 0   , ) /**< Number of revision strings to query on, size of @ref revision. */
CSMI_STRUCT_MEMBER(char**  , revisions         , ARRAY_STR, revisions_count   , NULL, ) /**< Filter results of the database query to only include cables containing revisions in this list. This field uses psql search of 'LIKE'. So add '%' to get partial matches. '%value%' */
CSMI_STRUCT_MEMBER(uint32_t, severities_count  , BASIC    ,                   , 0   , ) /**< Number of severity strings to query on, size of @ref severity. */
CSMI_STRUCT_MEMBER(char**  , severities        , ARRAY_STR, severities_count  , NULL, ) /**< Filter results of the database query to only include cables containing severities in this list. This field uses psql search of 'LIKE'. So add '%' to get partial matches. '%value%' */
CSMI_STRUCT_MEMBER(uint32_t, types_count       , BASIC    ,                   , 0   , ) /**< Number of type strings to query on, size of @ref type. */
CSMI_STRUCT_MEMBER(char**  , types             , ARRAY_STR, types_count       , NULL, ) /**< Filter results of the database query to only include cables containing types in this list. This field uses psql search of 'LIKE'. So add '%' to get partial matches. '%value%' */
CSMI_STRUCT_MEMBER(uint32_t, widths_count      , BASIC    ,                   , 0   , ) /**< Number of width strings to query on, size of @ref width. */
CSMI_STRUCT_MEMBER(char**  , widths            , ARRAY_STR, widths_count      , NULL, ) /**< Filter results of the database query to only include cables containing widths in this list. This field uses psql search of 'LIKE'. So add '%' to get partial matches. '%value%' */
CSMI_STRUCT_MEMBER(char, order_by, BASIC, , '\0', ) /**< Used to alter 'ORDER BY'. API will ignore NULL values. Default to 'ORDER BY serial_number ASC NULLS LAST'. VALID VALUES: [a] = 'ORDER BY serial_number ASC NULLS LAST', [A] =  'ORDER BY serial_number DESC NULLS LAST', [b] = 'ORDER BY guid_s1 ASC NULLS LAST', [B] = 'ORDER BY guid_s1 DESC NULLS LAST', [c] = 'ORDER BY guid_s2 ASC NULLS LAST', [C] = 'ORDER BY guid_s2 DESC NULLS LAST', [d] = 'ORDER BY identifier ASC NULLS LAST', [D] = 'ORDER BY identifier DESC NULLS LAST', [e] = 'ORDER BY length ASC NULLS LAST', [E] = 'ORDER BY length DESC NULLS LAST', [f] = 'ORDER BY name ASC NULLS LAST', [F] = 'ORDER BY name DESC NULLS LAST', [g] = 'ORDER BY part_number ASC NULLS LAST', [G] = 'ORDER BY part_number DESC NULLS LAST', [h] = 'ORDER BY port_s1 ASC NULLS LAST', [H] = 'ORDER BY port_s1 DESC NULLS LAST', [i] = 'ORDER BY port_s2 ASC NULLS LAST', [I] = 'ORDER BY port_s2 DESC NULLS LAST', [j] = 'ORDER BY revision ASC NULLS LAST', [J] = 'ORDER BY revision DESC NULLS LAST', [k] = 'ORDER BY severity ASC NULLS LAST', [K] = 'ORDER BY severity DESC NULLS LAST', [l] = 'ORDER BY type ASC NULLS LAST', [L] = 'ORDER BY type DESC NULLS LAST', [m] = 'ORDER BY width ASC NULLS LAST', [M] = 'ORDER BY width DESC NULLS LAST' */
CSMI_VERSION_END(0)


#undef CSMI_VERSION_START
#undef CSMI_VERSION_END
#undef CSMI_STRUCT_MEMBER
